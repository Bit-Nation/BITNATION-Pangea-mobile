// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WalletScreen renders correctly empty 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(WalletScreen)
    navigator={
      Object {
        "pop": [MockFunction],
        "push": [MockFunction],
        "setButtons": [MockFunction],
        "setOnNavigatorEvent": [MockFunction],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "moneySendingError": null,
      "moneySendingInProgress": false,
      "moneySendingSuccess": false,
      "navigator": Object {
        "pop": [MockFunction],
        "push": [MockFunction],
        "setButtons": [MockFunction],
        "setOnNavigatorEvent": [MockFunction],
      },
      "removeWallets": [Function],
      "selectWallet": [Function],
      "selectedWalletAddress": null,
      "selectedWalletCurrency": null,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "testingModeActive": false,
      "updateWalletList": [Function],
      "wallets": null,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "moneySendingError": null,
        "moneySendingInProgress": false,
        "moneySendingSuccess": false,
        "navigator": Object {
          "pop": [MockFunction],
          "push": [MockFunction],
          "setButtons": [MockFunction],
          "setOnNavigatorEvent": [MockFunction],
        },
        "removeWallets": [Function],
        "selectWallet": [Function],
        "selectedWalletAddress": null,
        "selectedWalletCurrency": null,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "testingModeActive": false,
        "updateWalletList": [Function],
        "wallets": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`WalletScreen renders correctly non-empty 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(WalletScreen)
    navigator={
      Object {
        "pop": [MockFunction],
        "push": [MockFunction],
        "setButtons": [MockFunction],
        "setOnNavigatorEvent": [MockFunction],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "moneySendingError": null,
      "moneySendingInProgress": false,
      "moneySendingSuccess": false,
      "navigator": Object {
        "pop": [MockFunction],
        "push": [MockFunction],
        "setButtons": [MockFunction],
        "setOnNavigatorEvent": [MockFunction],
      },
      "removeWallets": [Function],
      "selectWallet": [Function],
      "selectedWalletAddress": null,
      "selectedWalletCurrency": null,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "testingModeActive": false,
      "updateWalletList": [Function],
      "wallets": Array [
        Object {
          "balance": "0",
          "currency": "ETH",
          "ethAddress": "0xtestAddress",
        },
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "moneySendingError": null,
        "moneySendingInProgress": false,
        "moneySendingSuccess": false,
        "navigator": Object {
          "pop": [MockFunction],
          "push": [MockFunction],
          "setButtons": [MockFunction],
          "setOnNavigatorEvent": [MockFunction],
        },
        "removeWallets": [Function],
        "selectWallet": [Function],
        "selectedWalletAddress": null,
        "selectedWalletCurrency": null,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "testingModeActive": false,
        "updateWalletList": [Function],
        "wallets": Array [
          Object {
            "balance": "0",
            "currency": "ETH",
            "ethAddress": "0xtestAddress",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
