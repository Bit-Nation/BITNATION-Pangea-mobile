// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List Wallet List renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WalletList
    isRefreshing={[MockFunction]}
    onReceivePress={[MockFunction]}
    onRefresh={[MockFunction]}
    onSendPress={[MockFunction]}
    wallets={
      Array [
        Object {
          "balance": "0",
          "currency": "ETH",
          "ethAddress": "0xtestAddress",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <FlatList
        data={
          Array [
            Object {
              "balance": "0",
              "currency": "ETH",
              "ethAddress": "0xtestAddress",
            },
          ]
        }
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={[MockFunction]}
          />
        }
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />,
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "data": Array [
          Object {
            "balance": "0",
            "currency": "ETH",
            "ethAddress": "0xtestAddress",
          },
        ],
        "disableVirtualization": false,
        "horizontal": false,
        "initialNumToRender": 10,
        "keyExtractor": [Function],
        "maxToRenderPerBatch": 10,
        "numColumns": 1,
        "onEndReachedThreshold": 2,
        "refreshControl": <RefreshControlMock
          onRefresh={[Function]}
          refreshing={[MockFunction]}
        />,
        "renderItem": [Function],
        "scrollEventThrottle": 50,
        "updateCellsBatchingPeriod": 50,
        "windowSize": 21,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <FlatList
          data={
            Array [
              Object {
                "balance": "0",
                "currency": "ETH",
                "ethAddress": "0xtestAddress",
              },
            ]
          }
          disableVirtualization={false}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={[MockFunction]}
            />
          }
          renderItem={[Function]}
          scrollEventThrottle={50}
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />,
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Array [
            Object {
              "balance": "0",
              "currency": "ETH",
              "ethAddress": "0xtestAddress",
            },
          ],
          "disableVirtualization": false,
          "horizontal": false,
          "initialNumToRender": 10,
          "keyExtractor": [Function],
          "maxToRenderPerBatch": 10,
          "numColumns": 1,
          "onEndReachedThreshold": 2,
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={[MockFunction]}
          />,
          "renderItem": [Function],
          "scrollEventThrottle": 50,
          "updateCellsBatchingPeriod": 50,
          "windowSize": 21,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
