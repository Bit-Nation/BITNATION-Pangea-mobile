// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component tests Press works 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    enabled={true}
    onPress={[MockFunction]}
    title=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TouchableOpacity
        activeOpacity={0.2}
        onPress={[MockFunction]}
        style={
          Array [
            Object {
              "marginLeft": 13,
              "marginRight": 13,
            },
          ]
        }
      >
        <_Text
          buttonTitle={true}
          disabledButtonTitle={false}
        >
          
        </_Text>
      </TouchableOpacity>,
      "style": Array [
        Object {
          "borderRadius": 15,
          "height": 30,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#1C497E",
        },
        undefined,
      ],
      "title": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": <_Text
          buttonTitle={true}
          disabledButtonTitle={false}
        >
          
        </_Text>,
        "onPress": [MockFunction],
        "style": Array [
          Object {
            "marginLeft": 13,
            "marginRight": 13,
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "buttonTitle": true,
          "children": "",
          "disabledButtonTitle": false,
        },
        "ref": null,
        "rendered": "",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TouchableOpacity
          activeOpacity={0.2}
          onPress={[MockFunction]}
          style={
            Array [
              Object {
                "marginLeft": 13,
                "marginRight": 13,
              },
            ]
          }
        >
          <_Text
            buttonTitle={true}
            disabledButtonTitle={false}
          >
            
          </_Text>
        </TouchableOpacity>,
        "style": Array [
          Object {
            "borderRadius": 15,
            "height": 30,
            "justifyContent": "center",
          },
          Object {
            "backgroundColor": "#1C497E",
          },
          undefined,
        ],
        "title": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": <_Text
            buttonTitle={true}
            disabledButtonTitle={false}
          >
            
          </_Text>,
          "onPress": [MockFunction],
          "style": Array [
            Object {
              "marginLeft": 13,
              "marginRight": 13,
            },
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "buttonTitle": true,
            "children": "",
            "disabledButtonTitle": false,
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Button component tests Renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 15,
        "height": 30,
        "justifyContent": "center",
      },
      Object {
        "backgroundColor": "#1C497E",
      },
      undefined,
    ]
  }
  title=""
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "marginLeft": 13,
        "marginRight": 13,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      buttonTitle={true}
      disabledButtonTitle={false}
      ellipsizeMode="tail"
      style={
        Array [
          undefined,
          undefined,
          Object {
            "color": "#72A4DE",
            "fontSize": 14,
            "letterSpacing": -0.02,
            "lineHeight": 19,
            "textAlign": "center",
          },
          false,
          undefined,
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;
