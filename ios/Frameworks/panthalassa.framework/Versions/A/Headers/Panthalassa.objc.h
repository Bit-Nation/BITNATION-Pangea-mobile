// Objective-C API for talking to github.com/Bit-Nation/panthalassa Go package.
//   gobind -lang=objc github.com/Bit-Nation/panthalassa
//
// File is generated by gobind. Do not edit.

#ifndef __Panthalassa_H__
#define __Panthalassa_H__

@import Foundation;
#include "Universe.objc.h"


@class PanthalassaPanthalassa;
@class PanthalassaStartConfig;
@protocol PanthalassaUpStream;
@class PanthalassaUpStream;

@protocol PanthalassaUpStream <NSObject>
- (void)send:(NSString*)data;
@end

@interface PanthalassaPanthalassa : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (BOOL)addContact:(NSString*)pubKey error:(NSError**)error;
- (NSString*)export:(NSString*)pw pwConfirm:(NSString*)pwConfirm error:(NSError**)error;
- (BOOL)stop:(NSError**)error;
@end

@interface PanthalassaStartConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)encryptedKeyManager;
- (void)setEncryptedKeyManager:(NSString*)v;
- (NSString*)signedProfile;
- (void)setSignedProfile:(NSString*)v;
- (NSString*)ethWsEndpoint;
- (void)setEthWsEndpoint:(NSString*)v;
@end

FOUNDATION_EXPORT BOOL PanthalassaConnectToDAppDevHost(NSString* address, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaCreateHumanMessage(NSString* rawMsg, NSString* secretID, NSString* secret, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaDecryptMessage(NSString* message, NSString* secret, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaEthAddress(NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaEthPrivateKey(NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaExportAccountStore(NSString* pw, NSString* pwConfirm, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaGetIdentityPublicKey(NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaGetMnemonic(NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaHandleInitialMessage(NSString* message, NSString* preKeyBundlePrivatePart, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaIdentityPublicKey(NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaInitializeChat(NSString* identityPublicKey, NSString* preKeyBundle, NSError** error);

FOUNDATION_EXPORT BOOL PanthalassaIsValidMnemonic(NSString* mne);

FOUNDATION_EXPORT NSString* PanthalassaNewAccountKeys(NSString* pw, NSString* pwConfirm, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaNewAccountKeysFromMnemonic(NSString* mne, NSString* pw, NSString* pwConfirm, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaNewPreKeyBundle(NSError** error);

FOUNDATION_EXPORT BOOL PanthalassaSendResponse(NSString* id_, NSString* data, NSString* responseError, long timeout, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaSignProfile(NSString* name, NSString* location, NSString* image, NSError** error);

FOUNDATION_EXPORT NSString* PanthalassaSignProfileStandAlone(NSString* name, NSString* location, NSString* image, NSString* keyManagerStore, NSString* password, NSError** error);

FOUNDATION_EXPORT BOOL PanthalassaStart(NSString* config, NSString* password, id<PanthalassaUpStream> client, NSError** error);

FOUNDATION_EXPORT BOOL PanthalassaStartFromMnemonic(NSString* config, NSString* mnemonic, id<PanthalassaUpStream> client, NSError** error);

FOUNDATION_EXPORT BOOL PanthalassaStop(NSError** error);

@class PanthalassaUpStream;

@interface PanthalassaUpStream : NSObject <goSeqRefInterface, PanthalassaUpStream> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)send:(NSString*)data;
@end

#endif
